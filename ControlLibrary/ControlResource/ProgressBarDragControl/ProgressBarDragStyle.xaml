<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaior="clr-namespace:Careful.Controls.ProgressBarDragControl"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <Style TargetType="{x:Type behaior:ProgressBarDrag}">
        <Setter Property="Foreground" Value="#FF0DA8E5"/>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ProgressCornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type behaior:ProgressBarDrag}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" Height="{Binding ProgressHeight,RelativeSource={RelativeSource AncestorType=behaior:ProgressBarDrag}}" CornerRadius="{Binding ProgressCornerRadius,RelativeSource={RelativeSource AncestorType=behaior:ProgressBarDrag}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>


                        <Border x:Name="PART_Indicator" Height="{Binding ProgressHeight,RelativeSource={RelativeSource AncestorType=behaior:ProgressBarDrag}}" ClipToBounds="true" CornerRadius="{Binding ProgressCornerRadius,RelativeSource={RelativeSource AncestorType=behaior:ProgressBarDrag}}" IsHitTestVisible="False" HorizontalAlignment="Left">
                            <Grid>
                                <Border x:Name="Indicator" CornerRadius="4" Background="{TemplateBinding Foreground}"/>
                                <Border x:Name="Animation" CornerRadius="4" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Border>

                        <Canvas Width="{TemplateBinding Width}" Background="Transparent">
                            <i:Interaction.Behaviors>
                                <behaior:CanvasBehavior ProgressControl="{Binding RelativeSource={RelativeSource AncestorType={x:Type behaior:ProgressBarDrag}}}"></behaior:CanvasBehavior>
                            </i:Interaction.Behaviors>

                            <!--<Rectangle Width="65" Margin="-20,-20,0,0" HorizontalAlignment="Left" Canvas.Left="{Binding Path=Width,ElementName=PART_Indicator}">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="None">
                                        <VisualBrush.Visual>
                                            <TextBlock Text="{Binding ValueTime,RelativeSource={RelativeSource AncestorType={x:Type behaior:ProgressBarDragControl}}}"></TextBlock>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>-->
                            <Ellipse Cursor="Hand" Margin="-5,0,0,0" Stroke="#4F98EF" StrokeThickness="1" Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" Fill="#FFFFFF" HorizontalAlignment="Left" Canvas.Left="{Binding Path=Width,ElementName=PART_Indicator}" >
                                <i:Interaction.Behaviors>
                                    <behaior:ProgressDragBehavior ProgressControl="{Binding RelativeSource={RelativeSource AncestorType={x:Type behaior:ProgressBarDrag}}}"></behaior:ProgressDragBehavior>
                                </i:Interaction.Behaviors>
                            </Ellipse>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>